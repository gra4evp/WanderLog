import logging

from aiogram import Dispatcher, F, Router
from aiogram.filters import Command
from aiogram.types import KeyboardButton, Message, ReplyKeyboardMarkup, ReplyKeyboardRemove


router = Router()
logger = logging.Logger("LOCATION")

router = Router()
logger = logging.getLogger("LOCATION")

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)


@router.message(Command("track_me"))
async def start_tracking(message: Message):
    """–ó–∞–ø—É—Å–∫ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è"""
    await message.answer(
        "üìç –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é –≤–∞—à–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.\n"
        "–Ø –±—É–¥—É –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /stop_live",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[
                KeyboardButton(
                    text="üìç –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é",
                    request_location=True
                )
            ]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )


@router.message(F.location)
async def handle_initial_location(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é"""
    await message.answer(
        "–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞—á–∞—Ç–∞!",
        reply_markup=ReplyKeyboardRemove()
    )
    await log_location(message)


@router.edited_message(F.location)
async def handle_live_update(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π live-–ª–æ–∫–∞—Ü–∏–∏"""
    await log_location(message)


async def log_location(message: Message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç"""
    loc = message.location
    logger.info(
        "–ü–æ–ª—É—á–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: lat=%.6f, lon=%.6f, accuracy=%s, live=%s",
        loc.latitude,
        loc.longitude,
        loc.horizontal_accuracy or "N/A",
        "Live" if hasattr(message, 'edit_date') else "Static"
    )


@router.message(Command("stop_live"))
async def stop_tracking(message: Message):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏"""
    await message.answer(
        "–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
        reply_markup=ReplyKeyboardRemove()
    )
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d –æ—Å—Ç–∞–Ω–æ–≤–∏–ª —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é", message.from_user.id)


def register_handlers(dp: Dispatcher) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    dp.include_router(router)
