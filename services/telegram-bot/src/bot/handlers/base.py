import logging
from aiogram import Dispatcher, Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from keyboards.reply import get_main_keyboard, get_classes_info_keyboard
from utils.messages import get_welcome_message, A0_info, A1_info, B0_info, B1_info, C0_info, C1_info, D0_info, D1_info

logger = logging.getLogger(__name__)
router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()
    
    welcome_text = get_welcome_message(message.from_user.first_name)
    keyboard = get_main_keyboard()
    
    await message.answer(
        welcome_text,
        reply_markup=keyboard
    )
    
    logger.info(f"User {message.from_user.id} started the bot")


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
    ü§ñ <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>
    
    üì∏ <b>–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b>
    ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞
    ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, JPEG, PNG, WEBP
    ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 10MB
    ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞ —Ä–∞–∑
    
    üè† <b>–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è:</b>
    ‚Ä¢ –¢–∏–ø –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã
    ‚Ä¢ –ö–ª–∞—Å—Å –ø–æ–º–µ—â–µ–Ω–∏—è (A0, A1, B0, B1, C0, C1, D0, D1)
    ‚Ä¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞
    
    üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>
    ‚Ä¢ –ö–ª–∞—Å—Å –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
    ‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º
    
    üí° <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
    /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
    """
    
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("cancel"))
async def cmd_cancel(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    await state.clear()
    keyboard = get_main_keyboard()
    
    await message.answer(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )


@router.message(F.text == "üì∏ –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
async def handle_classify_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    await message.answer(
        "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, JPEG, PNG, WEBP\n"
        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB\n"
        "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ."
    )


@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def handle_help_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    await cmd_help(message)


@router.message(F.text == "üè† –û –∫–ª–∞—Å—Å–∞—Ö –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤")
async def handle_classes_info_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–∞—Ö"""
    keyboard = get_classes_info_keyboard()
    
    await message.answer(
        "üè† <b>–ö–ª–∞—Å—Å—ã –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤ –∫–≤–∞—Ä—Ç–∏—Ä</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )


@router.callback_query(F.data.startswith("class_label_"))
async def handle_class_info_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–∞—Ö"""
    class_type = callback.data.split("_")[-1]
    
    interior_class_info = {
        "A0": A0_info,
        "A1": A1_info,
        "B0": B0_info,
        "B1": B1_info,
        "C0": C0_info,
        "C1": C1_info,
        "D0": D0_info,
        "D1": D1_info
    }
    
    info = interior_class_info.get(class_type, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    await callback.message.edit_text(
        info,
        parse_mode="HTML"
    )
    
    await callback.answer()


def register_base_handlers(dp: Dispatcher) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    dp.include_router(router) 